import {
    BadgeInfo,
    Image as ImageIcon,
    AlignLeft,
    Tags,
    Layers,
    Store,
    DollarSign,
    CreditCard,
    PackageOpen,
    CircleDollarSign,
    Wallet,
    ArrowUpRight,
    BarChart3,
    TrendingUp,
    Boxes,
} from "lucide-react";

import type { ProductFieldT } from "@ts/ProductFieldT.ts";

export const productFields: ProductFieldT[] = [
    // ðŸ§¾ Info
    {
        inputId: 1,
        name: "name",
        label: "Product Name",
        type: "text",
        required: true,
        icon: BadgeInfo,
        placeholder: "e.g. Gel Pen",
        inputCategory: "Info",
        fullWidth: true,
    },
    {
        inputId: 2,
        name: "image",
        label: "Product Image",
        type: "image",
        required: false,
        icon: ImageIcon,
        inputCategory: "Info",
    },
    {
        inputId: 3,
        name: "description",
        label: "Description",
        type: "textarea",
        required: false,
        icon: AlignLeft,
        placeholder: "Add short description...",
        inputCategory: "Info",
    },
    {
        inputId: 4,
        name: "category",
        label: "Category",
        type: "select",
        required: true,
        icon: Tags,
        SelectValue: ["Stationery", "Food", "Cleaning", "Electronics"],
        inputCategory: "Info",
    },
    {
        inputId: 5,
        name: "type",
        label: "Type",
        type: "text",
        required: false,
        icon: Layers,
        inputCategory: "Info",
    },
    {
        inputId: 6,
        name: "source",
        label: "Purchase Source",
        type: "text",
        required: false,
        icon: Store,
        placeholder: "e.g. Local Market",
        inputCategory: "Info",
    },

    // ðŸ’° Pricing
    {
        inputId: 7,
        name: "wholesalePrice",
        label: "Wholesale Price",
        type: "number",
        required: true,
        icon: DollarSign,
        unit: "EGP",
        step: 0.01,
        inputCategory: "Pricing",
    },
    {
        inputId: 8,
        name: "retailPrice",
        label: "Retail Price",
        type: "number",
        required: true,
        icon: CreditCard,
        unit: "EGP",
        step: 0.01,
        inputCategory: "Pricing",
    },

    // ðŸ“¦ Unit Details
    {
        inputId: 9,
        name: "unitCount",
        label: "Items per Unit",
        type: "number",
        required: false,
        icon: PackageOpen,
        placeholder: "e.g. 12 (in a box)",
        inputCategory: "Details",
        step: 1,
        min: 1,
    },
    {
        inputId: 10,
        name: "unitWholesale",
        label: "Unit Wholesale Price",
        type: "number",
        required: false,
        icon: CircleDollarSign,
        unit: "EGP",
        step: 0.01,
        inputCategory: "Details",
    },
    {
        inputId: 11,
        name: "unitRetail",
        label: "Unit Retail Price",
        type: "number",
        required: false,
        icon: Wallet,
        unit: "EGP",
        step: 0.01,
        inputCategory: "Details",
    },

    // ðŸ“ˆ Profit & Stock
    {
        inputId: 12,
        name: "unitProfit",
        label: "Net Profit (Per Item)",
        type: "number",
        required: false,
        icon: ArrowUpRight,
        unit: "EGP",
        step: 0.01,
        inputCategory: "Stock",
    },
    {
        inputId: 13,
        name: "groupProfit",
        label: "Net Profit (Per Unit)",
        type: "number",
        required: false,
        icon: BarChart3,
        unit: "EGP",
        step: 0.01,
        inputCategory: "Stock",
    },
    {
        inputId: 14,
        name: "profitMargin",
        label: "Profit Margin (%)",
        type: "number",
        required: false,
        icon: TrendingUp,
        step: 0.1,
        inputCategory: "Stock",
    },
    {
        inputId: 15,
        name: "stockQty",
        label: "Stock Quantity",
        type: "number",
        required: true,
        icon: Boxes,
        step: 1,
        inputCategory: "Stock",
        min: 0,
        defaultValue: 0,
    },
];

export default productFields;
