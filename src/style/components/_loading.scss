@use "../global/index" as *;
@use "../util/index" as *;

// // @include flex(r, c, c);
// // @include flexForPhon(cr,2);
// // @include grid(2, 2, fr, 1rem)

// font-family: var(--ff-Diwani);

$glitch-steps: 25; // ? max is 100 before it gets too much
:root {
    --glitch-intensity: -3px; // ? max is 5 before it gets too much
    --glitch-speed: 2s;
    --glitch-bg-clr: var(--bg-clr);
    --glitch-txt-clr: var(--txt-clr);
}
.Loading {
    background-color: var(--glitch-bg-clr);
    .Container {
        .Logo {
            color: var(--glitch-txt-clr);
        }
        .logo_main {
            font-size: var(--fs-lg);
        }
        .logo_studio {
            font-size: var(--fs-xl);
        }
    }
}
.glitch {
    overflow: hidden;
}
.glitch::after,
.glitch::before {
    content: attr(data-text);
    font-size: 100%;
    width: fit-content;
    position: absolute;
    top: 0;
    color: var(--glitch-txt-clr);
    background: var(--glitch-bg-clr);
    overflow: hidden;
    clip: rect(0, 0px, 0, 0);
    user-select: none;
    z-index: -1;
    text-shadow: 2px 0 var(--error-clr);
}
.glitch::after {
    left: var(--glitch-intensity);
    animation: noise-anim var(--glitch-speed) linear infinite alternate-reverse;
}
.glitch::before {
    left: calc(var(--glitch-intensity) * -1.5);
    animation: noise-anim-2 calc(var(--glitch-speed) + 1s) linear infinite
        alternate-reverse;
}
@media (prefers-reduced-motion: no-preference) {
    @keyframes noise-anim {
        @for $i from 0 through $glitch-steps {
            #{percentage($i*(1/$glitch-steps))} {
                clip: rect(random(100) + px, 9999px, random(250) + px, 0);
            }
        }
    }
    @keyframes noise-anim-2 {
        @for $i from 0 through $glitch-steps {
            #{percentage($i*(1/$glitch-steps))} {
                clip: rect(random(100) + px, 9999px, random(250) + px, 0);
            }
        }
    }
}
